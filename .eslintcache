[{"D:\\Study Folder\\Projects\\React\\dashboard\\src\\index.js":"1","D:\\Study Folder\\Projects\\React\\dashboard\\src\\App.js":"2","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Dashboard.jsx":"3","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\ResponsiveDrawer.jsx":"4","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\ListItems.jsx":"5","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Orders.jsx":"6","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Appoinments.jsx":"7","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Title.jsx":"8","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Charts.jsx":"9","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Settings.jsx":"10","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Profile.jsx":"11","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\ProfileEdit.jsx":"12"},{"size":219,"mtime":1608285402287,"results":"13","hashOfConfig":"14"},{"size":558,"mtime":1608470006141,"results":"15","hashOfConfig":"14"},{"size":4760,"mtime":1608443741601,"results":"16","hashOfConfig":"14"},{"size":5644,"mtime":1608275578175,"results":"17","hashOfConfig":"14"},{"size":1185,"mtime":1608470132513,"results":"18","hashOfConfig":"14"},{"size":1912,"mtime":1608389977016,"results":"19","hashOfConfig":"14"},{"size":1406,"mtime":1608357841322,"results":"20","hashOfConfig":"14"},{"size":714,"mtime":1608310145117,"results":"21","hashOfConfig":"14"},{"size":1200,"mtime":1608310125873,"results":"22","hashOfConfig":"14"},{"size":4258,"mtime":1608470214906,"results":"23","hashOfConfig":"14"},{"size":935,"mtime":1608470233420,"results":"24","hashOfConfig":"14"},{"size":7060,"mtime":1608470371103,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1kun8th",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Study Folder\\Projects\\React\\dashboard\\src\\index.js",[],["57","58"],"D:\\Study Folder\\Projects\\React\\dashboard\\src\\App.js",["59"],"import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Dashboard from './Components/Dashboard';\nimport Settings from './Components/Settings';\n\nconst App = () => {\n    return (\n        <div className='App'>\n            <BrowserRouter>\n            <Switch>\n                <Route path='/' exact component={Dashboard} />\n                <Route path='/settings' component={Settings} />\n            </Switch>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Dashboard.jsx",["60","61","62"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Drawer from './ResponsiveDrawer';\r\nimport Chart from './Charts';\r\nimport Deposits from './Appoinments';\r\nimport Orders from './Orders';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    fontSizeLarge: {\r\n        padding: '0 38px;',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        color: 'secondary',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: 'light',\r\n                },\r\n            }),\r\n        []\r\n    );\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n\r\n                <Drawer />\r\n                \r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth='lg' className={classes.container}>\r\n                        <Grid container spacing={6}>\r\n                            {/* Recent Deposits */}\r\n                            <Deposits />\r\n\r\n                            {/* Chart */}\r\n                            <Grid item xs={12} md={8} lg={6}>\r\n                                <Paper className={fixedHeightPaper}>\r\n                                    <Chart />\r\n                                </Paper>\r\n                            </Grid>\r\n\r\n                            {/* New Orders */}\r\n                            <Grid item xs={12} md={4} lg={6}>\r\n                                <Paper className={classes.paper}>\r\n                                    <Orders />\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n};\r\nexport default Dashboard;\r\n","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\ResponsiveDrawer.jsx",[],"D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\ListItems.jsx",[],"D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Orders.jsx",["63"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from './Title';\r\n\r\n// Generate Order Data\r\nconst createData = (id, date, name, status, paymentMethod, amount) => {\r\n  return { id, date, name, status, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '#7835', 'Today', 'Paid', '••••', 512.44),\r\n  createData(1, '#7834', 'Today', 'Paid', '••••', 866.99),\r\n  createData(2, '#7833', 'Today', 'Paid', '••••', 400.81),\r\n  createData(3, '#7832', 'Today', 'Paid', '••••', 654.39),\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Orders = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>New orders</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>ID</TableCell>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            {/*<TableCell>Payment Method</TableCell>*/}\r\n            <TableCell align=\"right\">Total</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.status}</TableCell>\r\n              {/*<TableCell>{row.paymentMethod}</TableCell>*/}\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Orders;\r\n","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Appoinments.jsx",["64"],"/* eslint-disable no-script-url */\r\n\r\nimport React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './Title';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    depositContext: {\r\n        flex: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 220,\r\n    },\r\n}));\r\n\r\nconst Deposits = () => {\r\n    const classes = useStyles();\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} md={4} lg={12}>\r\n                <Paper className={fixedHeightPaper}>\r\n                    <Title>Todays Appoinments </Title>\r\n                    <Typography component='p' variant='h4'>\r\n                        No Upcoming Consultation\r\n                    </Typography>\r\n                    <Typography\r\n                        color='textSecondary'\r\n                        className={classes.depositContext}\r\n                    ></Typography>\r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Deposits;\r\n","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Title.jsx",[],["65","66"],"D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Charts.jsx",[],"D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Settings.jsx",["67","68","69","70"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from './ResponsiveDrawer';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport ProfileEdit from './ProfileEdit';\r\nimport Profile from './Profile';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    fontSizeLarge: {\r\n        padding: '0 38px;',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        color: 'secondary',\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const theme = React.useMemo(\r\n        () =>\r\n            createMuiTheme({\r\n                palette: {\r\n                    type: 'light',\r\n                },\r\n            }),\r\n        []\r\n    );\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n\r\n                <Drawer />\r\n\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth='lg' className={classes.container}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} md={8} lg={2}>\r\n                                <Profile />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} md={8} lg={10}>\r\n                                <ProfileEdit />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        </ThemeProvider>\r\n    );\r\n}\r\nexport default Dashboard;","D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\Profile.jsx",[],"D:\\Study Folder\\Projects\\React\\dashboard\\src\\Components\\ProfileEdit.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":102,"column":12,"nodeType":"77","messageId":"78","endLine":102,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":103,"column":11,"nodeType":"77","messageId":"78","endLine":103,"endColumn":27},{"ruleId":"75","severity":1,"message":"81","line":106,"column":11,"nodeType":"77","messageId":"78","endLine":106,"endColumn":28},{"ruleId":"75","severity":1,"message":"82","line":29,"column":9,"nodeType":"77","messageId":"78","endLine":29,"endColumn":16},{"ruleId":"75","severity":1,"message":"83","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":12},{"ruleId":"71","replacedBy":"84"},{"ruleId":"73","replacedBy":"85"},{"ruleId":"75","severity":1,"message":"79","line":99,"column":12,"nodeType":"77","messageId":"78","endLine":99,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":100,"column":11,"nodeType":"77","messageId":"78","endLine":100,"endColumn":27},{"ruleId":"75","severity":1,"message":"81","line":103,"column":11,"nodeType":"77","messageId":"78","endLine":103,"endColumn":28},{"ruleId":"75","severity":1,"message":"86","line":106,"column":11,"nodeType":"77","messageId":"78","endLine":106,"endColumn":27},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'open' is assigned a value but never used.","'handleDrawerOpen' is assigned a value but never used.","'handleDrawerClose' is assigned a value but never used.","'classes' is assigned a value but never used.","'Link' is defined but never used.",["87"],["88"],"'fixedHeightPaper' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]